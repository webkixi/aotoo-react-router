{"version":3,"sources":["index.js"],"names":["_os","ua","ret","android","match","ios","mobile","once","cb","require","Popstate","this","saxer","get","_history","operateId","_historyCount","_leftStack","set","stat","params","blockPopstateEvent","evt","preventDefault","props","flag","stopImmediatePropagation","key","rootUrl","window","history","pushState","uri","_lru","max","anchorHash","value","cache","size","_cache","Error","anchorHref","Object","create","has","undefined","remove","update","v","clear","_aotooReactTabs","SAX","os","navigator","userAgent","addEventListener","e","target","nodeName","href","indexOf","document","readyState","setTimeout","lru","animatecss","fade","rein","out","left","in","back","opts","utile","storage","sessionStorage","likeApp","right","iscrollConfig","merge","dft","__opts","routerClass","split","mulitple","_Tabs","Router","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","state","direction","animate","animatein","animateType","animaterein","animateout","animateback","historyPush","bind","getRealContent","findPath","_inherits","Tabs","_createClass","menuData","MenuData","ContentData","select","on","path","that","index","data","historyPop","emit","where","type","_typeof","menu_data","historyItem","_data","curHistoryState","preState","timeLine","length","push","rightState","cnt","pre","InstanceContext","_pre","from","parent","selectData","result","enter","main","title","idf","attr","prePage","preContent","oriContent","content","getContent","id","rightIndex","_","findLastIndex","o","slice","xxid","preId","prePageInfo","_extends","origin","React","createElement","ref","uniqueId","className","boxCls","curPage","operate","leave","curPageDom","refs","prePageDom","classList","leaveContent","cls","boxes_cls","jsxMenu","createMenu","getPage","IscrollTreeMenu","Aotoo","iscroll","showMenu","Action","UPDATE","SELECT","curState","ctx","router","__id","condition","preback","find","getHistory","setHistory","record","clearHistory","start","hasMounted","goto","config","delete","sessName","storageName","removeItem","save","timmer","name","JSON","stringify","getWhereInfo","location","stack","current","cur","sessData","restore","parse","page","pop","next","param","_this2","off","resultBeforegoto","result_beforegoto","$select","_this3","gap","resultBeforeback","h","whereami","result_beforeback","whereBack"],"mappings":"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","file":"../index.js","sourcesContent":["import { Tabs } from 'aotoo-react-tabs'\nrequire('aotoo-mixins-iscroll')\nconst Popstate = SAX('Popstate');\nvar _history = []\nvar _historyCount = 0\nvar _leftStack = []\nvar os\n\nfunction _os(ua) {\n  var ret = {},\n    android = ua.match(/(?:Android);?[\\s\\/]+([\\d.]+)?/),\n    ios = ua.match(/(?:iPad|iPod|iPhone).*OS\\s([\\d_]+)/);\n  ret.mobile = !!(android || ios)\n  return ret;\n}\n\nlet stat = true\nfunction once(cb) {\n  const id = this.saxer.get('__id')\n  const operateId = id + '_OPERATE'\n  const operate = this.saxer.get(operateId)\n  if (operate) {\n    if (operate == 'break') return   // continue will dealwith flow code\n    else {\n      this.saxer.set(operateId, 'break')\n    }\n  } else {\n    this.saxer.set(operateId, 'break')\n  }\n  function next(params) {\n    stat = true\n  }\n  if (stat) {\n    stat = false\n    cb(next)\n  }\n\n  // clearTimeout(mytimmer)\n  // mytimmer = setTimeout(() => {\n  //   if (stat) {\n  //     stat = false\n  //     cb(next)\n  //   }\n  // }, delay);\n}\n\n(function () {\n  var anchorHash = false\n  var anchorHref\n  os = _os(navigator.userAgent)\n\n  document.addEventListener('click', function (e) {\n    var target = e.target\n    if (target.nodeName == 'A') {\n      anchorHash = false\n      anchorHref = target.href\n      anchorHash = target.href.indexOf('#') > -1 ? true : false\n    }\n  }, false)\n\n  var blockPopstateEvent = document.readyState != \"complete\";\n  window.addEventListener(\"load\", function () {\n    setTimeout(\n      function () {\n        blockPopstateEvent = false;\n      },\n      0)\n  }, false)\n\n  window.addEventListener(\"popstate\", function (evt) {\n    if (blockPopstateEvent && document.readyState == \"complete\") {\n      evt.preventDefault()\n      evt.stopImmediatePropagation()\n    } else {\n      if (anchorHash) {\n        /* do something */\n      } else {\n        Popstate.emit('__goback');\n      }\n      anchorHref = ''\n      anchorHash = false\n    }\n  }, false)\n}())\n\nfunction pushState(props, nohash) {\n  const flag = props.flag ? (typeof props.flag == 'boolean' ? '#' : props.flag) : ''\n  const uri = flag ? props.rootUrl + flag + props.key : props.rootUrl\n  window.history.pushState(props, '', uri)\n}\n\nfunction _lru(max) {\n  //https://github.com/dominictarr/hashlru\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n  function update(key, value) {\n    cache[key] = value\n    size++\n    if (size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\nlet lru = _lru(50)\nlet animatecss = {\n  fade: {\n    in: ' fadeIn animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOut contentHide animated-faster'\n  },\n\n  left: {\n    in: ' fadeInLeft animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOutLeft contentHide animated-faster'\n  },\n\n  right: {\n    in: ' fadeInRight animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' outHeight fadeOut contentHide animated-fastest',\n    back: ' outHeight fadeOutRight contentHide animated-faster',\n  }\n}\n\nlet __opts\nAotoo.extend('router', function (opts, utile) {\n  let dft = {\n    storage: window.sessionStorage,\n    likeApp: false,   // 模仿app动画切换，保持2个页面, 置为false 可暂时停止prepage页面，提升性能\n    gap: 100,   // 两次点击之间的间隙延时时间，防止click多次响应\n    props: {\n      routerClass: 'routerGroup',\n      mulitple: false\n    },\n    iscrollConfig: {}  // 导航栏的iscroll滚动参数设置\n  }\n  opts = utile.merge(dft, opts)\n  __opts = opts\n\n  if (opts.animatecss) {\n    animatecss = utile.merge(animatecss, opts.animatecss)\n    delete opts.animatecss\n  }\n\n  const rootUrl = location.href.split('#')[0]\n  class Router extends Tabs {\n    constructor(props) {\n      super(props)\n      this.state = utile.merge(this.state, {\n        flag: this.props.flag || '#',\n        rootUrl: this.props.rootUrl || rootUrl,\n        direction: 'goto',\n        animate: this.props.animate || 'right'\n      })\n      this.prePageInfo\n\n      if (this.state.animate) {\n        const animateType = this.state.animate  // fade, left, right\n        this.animatein = animatecss[animateType]['in']\n        this.animaterein = animatecss[animateType]['rein']\n        this.animateout = animatecss[animateType]['out']\n        this.animateback = animatecss[animateType]['back']\n      }\n\n      this.historyPush = this.historyPush.bind(this)\n      this.getRealContent = this.getRealContent.bind(this)\n      this.findPath = this.findPath.bind(this)\n    }\n\n    componentWillMount() {\n      super.componentWillMount()\n      const that = this\n      const menuData = this.saxer.get().MenuData\n      const contentData = this.saxer.get().ContentData\n      const selectItem = menuData[this.state.select]\n\n\n      this.on('historypush', function (opts) {\n        const _path = opts.path\n        const _data = opts.data\n        const historyItem = that.findPath(_path)\n\n        that.historyPush({\n          index: historyItem.index,\n          key: historyItem.path,\n          data: _data || {}\n        })\n      })\n\n      this.on('historypop', function (opts) {\n        return that.historyPop(opts)\n      })\n\n      this.emit('historypush', {\n        path: this.state.select,\n        data: {}\n      })\n    }\n\n    findPath(where) {\n      const type = typeof where\n      const menu_data = this.saxer.get().MenuData\n      if (type == 'number') {\n        return menu_data[where]\n      }\n      if (type == 'string') {\n        return utile.find(menu_data, { path: where })\n      }\n    }\n\n    historyPush(props) {\n      if (this.state.flag) {\n        const curHistoryState = window.history.state\n        pushState({\n          index: props.index,\n          key: props.key,\n          path: props.key,\n          data: props.data,\n          rootUrl: this.state.rootUrl,\n          preState: curHistoryState,\n          timeLine: _historyCount,\n          flag: this.state.flag\n        })\n      } else {\n        pushState({\n          rootUrl: this.state.rootUrl,\n          flag: this.state.flag\n        }, true)\n      }\n      const preState = _history[_history.length - 1]\n      _history.push({\n        index: props.index,\n        key: props.key,\n        path: props.key,\n        data: props.data,\n        preState: preState,\n        timeLine: _historyCount\n      })\n\n      _historyCount++\n    }\n\n    historyPop() {\n      let state = _history.pop()\n      if (!state) return false\n      let rightState;\n      if (this.state.flag) {\n        rightState = (state && state.preState)\n        if (rightState) {\n          pushState({\n            index: rightState.index,\n            key: rightState.key,\n            data: rightState.data,\n            rootUrl: this.state.rootUrl,\n            preState: \"curHistoryState\",\n            flag: this.state.flag\n          })\n        }\n      } else {\n        rightState = _history.pop()\n        pushState({ rootUrl: this.state.rootUrl, flag: this.state.flag }, true)\n      }\n\n      return rightState\n    }\n\n    getRealContent(cnt, pre) {\n      if (!cnt) return ' '\n      let InstanceContext = this.saxer.get().InstanceContext || {}\n      let _pre = this.findPath(pre)\n      InstanceContext.from = (function () {\n        if (_pre) {\n          return {\n            index: _pre.index,\n            path: _pre.path,\n            title: _pre.title,\n            idf: _pre.idf,\n            parent: _pre.parent,\n            attr: _pre.attr\n          }\n        }\n      })()\n      const selectData = this.state.selectData\n      if (typeof cnt == 'function') {\n        let result = cnt(InstanceContext)\n        if (typeof result == 'object') {\n          if (result['$$typeof']) return result\n\n          // enter, leave, main, loaded\n          if (typeof result.enter == 'function') return result.enter(selectData)\n          else if (typeof result.main == 'function') {\n            return result.main(selectData)\n          }\n        }\n      }\n      return cnt\n    }\n\n    getPage(boxCls) {\n      const xxid = this.saxer.get('__id')\n      const operateId = xxid + '_OPERATE'\n      const operate = this.saxer.get(operateId)\n\n      const id = this.state.select;\n      let pre, preId, prePage, preContent;\n      let oriContent, content;\n      oriContent = this.getContent(id);\n\n      if (this.state.direction == 'jumpback') {\n        // content = lru.get(id)\n        // if (!content) {\n        //   oriContent = this.getContent(id)\n        //   content = this.getRealContent(oriContent)\n        // }\n\n        pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        let rightIndex = _.findLastIndex(_history, function (o) { return o.index == id })\n        if (rightIndex > -1) {\n          rightIndex += 1\n          _history = _history.slice(0, rightIndex)\n          _leftStack = _leftStack.slice(0, (rightIndex))\n        }\n      }\n      else\n      if (this.state.direction == 'back') {\n        pre = _leftStack.pop()\n      } else {\n        pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n      }\n\n      if (this.state.animate) {\n        if (this.state.animate == 'fade' || !opts.likeApp) {\n          prePage = undefined\n          this.prePageInfo = (pre && pre.id !== id) ? { origin: this.getContent(pre.id), ...pre} : ''\n        } else {\n          if (pre && pre.id !== id) {\n            this.prePageInfo = { origin: this.getContent(pre.id), ...pre}\n            preContent = lru.get(pre.id)\n            if (!preContent) {\n              preContent = this.getRealContent(this.getContent(pre.id))\n            }\n            prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls}>{preContent}</div>\n          }\n        }\n      }\n\n      content = this.getRealContent(oriContent, pre)\n\n      const curPage = <div\n        ref=\"curPage\"\n        key={utile.uniqueId('Router_Single_')}\n        className={boxCls}>\n        {content}\n      </div>\n\n      // 下面的部分有顺序要求，不能随意放置\n      if (this.state.direction == 'goto') {\n        _leftStack.push({\n          id: id,\n        })\n      }\n\n      lru.set(id, content)\n\n      if (operate == 'break') {\n        this.saxer.set(operateId, 'continue')\n      }\n\n      if (prePage) {\n        return [ prePage, curPage ]\n      } else {\n        return [ curPage ]\n      }\n    }\n\n    leaveContent() {\n      if (this.prePageInfo) {\n        const InstanceContext = this.saxer.get().InstanceContext\n        const _pre = this.prePageInfo.origin\n        if (typeof _pre == 'function') {\n          let result = _pre(InstanceContext)\n          if (typeof result == 'object') {\n            if (typeof result.leave == 'function') return result.leave()\n          }\n        }\n      }\n    }\n\n    componentDidMount() {\n      let animatein = this.animatein\n      let animateout = this.animateout\n      if (this.state.direction == 'back' || this.state.direction == 'jumpback') {\n        animateout = this.animateback\n        animatein = this.animaterein\n      }\n      const curPageDom = this.refs.curPage\n      const prePageDom = this.refs.prePage\n      if (curPageDom) {\n        curPageDom.classList.value += animatein\n      }\n      if (prePageDom) {\n        prePageDom.classList.value += animateout\n      }\n      this.leaveContent()\n    }\n\n    render() {\n      const cls = !this.props.routerClass ? 'routerGroup ' : 'routerGroup ' + this.props.routerClass\n      const boxes_cls = !this.props.mulitple ? (this.props.animate == 'left' ? 'routerBoxes boxLeft' : this.props.animate == 'right' ? 'routerBoxes boxRight' : 'routerBoxes') : 'routerBoxes mulitple'\n      const jsxMenu = this.createMenu()\n\n      const content = this.getPage(boxes_cls)\n      const IscrollTreeMenu = Aotoo.iscroll(\n        <div className='routerMenus'>{jsxMenu}</div>, \n        opts.iscrollConfig\n      )\n\n      return (\n        <div className={cls}>\n          {this.state.showMenu ? <IscrollTreeMenu /> : ''}\n          {content}\n        </div>\n      )\n    }\n  }\n\n  const Action = {\n    UPDATE: function (ostate, opts, ctx) {\n      let state = this.curState\n      state.data = opts.data\n      return state\n    },\n\n    SELECT: function (ostate, opts, ctx) {\n      let state = this.curState\n\n      // select\n      state.select = opts.select\n\n      // selectData\n      if (opts.selectData) {\n        state.selectData = opts.selectData\n      }\n\n      if (opts.direction) {\n        state.direction = opts.direction || 'goto'\n      }\n\n      if (state.direction == 'goto') {\n        ctx.emit('historypush', {\n          path: state.select,\n          data: state.selectData\n        })\n      }\n\n      if (typeof opts.cb == 'function') {\n        setTimeout(function () { opts.cb() }, 100);\n      }\n\n      return state\n    },\n  }\n\n  // const router = Aotoo(Tabs, Action, dft)\n  let router = Aotoo(Router, Action, dft)\n  router.__id = _.uniqueId('ROUTER_ID_')\n  router.saxer.set('__id', router.__id)\n  router.condition = {\n    preback: 'preback'\n  }\n\n  router.saxer.append({\n    InstanceContext: router\n  })\n\n  Popstate.on('__goback', function (param) {\n    return router.back()\n\n    // let hash\n    // if (param.href.indexOf('#')>-1) {\n    //   hash = param.href.substr(param.href.indexOf('#')+1)\n    // }\n    // // if (!hash) {\n    // //   return router.back()\n    // // }\n    // if (hash) {\n    //   const lastItem = _history[(_history.length - 1)]\n    //   if (hash !== lastItem.path) {\n    //     return router.back()\n    //   }\n    // }\n  })\n\n  let timmer = {\n    goto: '',\n    back: ''\n  }\n\n  router.extend({\n    getWhereInfo: function (where) {\n      const menu_data = this.saxer.get().MenuData\n      return utile.find(menu_data, { path: where })\n    },\n    getHistory: function (params) {\n      return _history\n    },\n    setHistory: function (record) {\n      if (record) {\n        _history = record.history || _history\n        _leftStack = record.stack || _leftStack\n      }\n    },\n    clearHistory: function (params) {\n      _history = []\n      _leftStack = []\n    },\n    start: function (id, data) {\n      if (this.hasMounted()) {\n        this.goto(id, data)\n      } else {\n        if (this.config && this.config.props) {\n          this.config.props.select = id\n          this.config.props.selectData = data\n        }\n      }\n    },\n    delete: function () {\n      let sessName\n      if (this.storageName) {\n        sessName = this.storageName\n        if (dft.storage[sessName]) {\n          dft.storage.removeItem(sessName)\n          return true\n        }\n      }\n    },\n    save: function (name, params) {\n      let sessName\n      if (name) {\n        sessName = name\n        const his = JSON.stringify(_history)\n        const stack = JSON.stringify(_leftStack)\n        const cur = _history[_history.length - 1]\n\n        const sessData = {\n          from: window.location,\n          history: _history,\n          stack: _leftStack,\n          current: cur\n        }\n        this.storageName = sessName\n        dft.storage.setItem(sessName, JSON.stringify(sessData))\n      }\n    },\n    restore: function (name, params) {\n      let sessName\n      if (name) {\n        // sessName = name + '_' + this.globalName\n        sessName = name\n        if (dft.storage[sessName]) {\n          const sessData = JSON.parse(dft.storage[sessName])\n          dft.storage.removeItem(sessName)\n\n          if (sessData.history.length) {\n            var cur = {\n              page: sessData.history.pop(),\n              stack: sessData.stack.pop()\n            }\n\n            _history = sessData.history\n            _leftStack = sessData.stack\n\n            // _history.pop()\n            // _leftStack.pop()\n            this.start(\n              cur.page.path,\n              cur.page.data\n            )\n  \n            return true\n          }\n        }\n      }\n    },\n\n    goto: function (where, data) {\n      once.call(this, next => {\n        setTimeout(() => {\n          next()\n        }, __opts.gap);\n\n        const result_beforegoto = this.emit('_beforeGoto', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n\n          setHistory: this.setHistory\n        })\n        this.off('_beforeGoto')\n\n        const resultBeforegoto = this.emit('beforeGoto', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n\n          param: {\n            path: where,\n            data: data\n          },\n\n          setHistory: this.setHistory\n        })\n\n        if (result_beforegoto) return\n        if (resultBeforegoto) return\n\n        if (typeof where != 'string') return\n        const target = this.getWhereInfo(where)\n        if (target) {\n          this.$select({\n            select: target.index,\n            selectData: data,\n            direction: 'goto'\n          })\n        }\n      })\n    },\n\n    back: function (where, data) {\n      once.call(this, next => {\n        setTimeout(() => {\n          next()\n        }, __opts.gap);\n        \n        const result_beforeback = this.emit('_beforeBack', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n          setHistory: this.setHistory\n        })\n  \n        this.off('_beforeBack')\n  \n        const resultBeforeback = this.emit('beforeBack', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n          setHistory: this.setHistory\n        })\n  \n        if (result_beforeback) return\n        if (resultBeforeback) return\n  \n        let condition = {}\n        if (this.hasOn('preback')) {\n          const h = _history[_history.length - 1]\n          const whereami = {\n            index: h.index,\n            path: h.path,\n            data: h.data,\n            pre: h.preState,\n            flag: h.flag\n          }\n          condition = this.emit('preback', whereami)\n          if (!condition) return\n        }\n        if (where) {\n          if (typeof where != 'string') return\n          const target = this.getWhereInfo(where)\n          if (target) {\n            this.$select({\n              select: target.index,\n              selectData: utile.merge({}, data, condition),\n              direction: 'jumpback'\n            })\n          }\n        } else {\n          const whereBack = this.emit('historypop')\n          // whereBack: {\n          // index: props.index,\n          // key: props.key,\n          // data: props.data,\n          // rootUrl: this.state.rootUrl,\n          // preState: curHistoryState,\n          // timeLine: _historyCount,\n          // flag: this.state.flag\n          //}\n          if (whereBack) {\n            this.$select({\n              select: whereBack.index,\n              selectData: utile.merge({}, whereBack.data, condition),\n              direction: 'back'\n            })\n            return whereBack\n          } else {\n            if (window.history.length) {\n              history.back()\n            } else {\n              pushState({ rootUrl: rootUrl }, true)\n            }\n          }\n        }\n      })\n    }\n  })\n\n  return router\n})"]}