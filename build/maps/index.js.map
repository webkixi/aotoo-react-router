{"version":3,"sources":["index.js"],"names":["blockPopstateEvent","window","addEventListener","props","flag","setTimeout","rootUrl","key","uri","update","value","Popstate","emit","size","max","_cache","cache","Object","create","evt","preventDefault","stopImmediatePropagation","history","pushState","undefined","remove","_lru","Error","get","v","set","clear","_aotooReactTabs","require","SAX","document","readyState","lru","_historyCount","_leftStack","animatecss","in","rein","left","out","back","_history","right","fade","opts","utile","merge","dft","location","href","split","extend","_Tabs","Router","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","routerClass","state","mulitple","direction","animateType","animate","animatein","animateout","historyPush","bind","getRealContent","findPath","_inherits","Tabs","_createClass","saxer","MenuData","ContentData","menuData","select","on","path","animaterein","that","index","historyItem","data","historyPop","where","type","_typeof","menu_data","_data","preState","curHistoryState","timeLine","find","push","rightState","pop","cnt","InstanceContext","selectData","result","enter","pre","prePage","preContent","oriContent","content","id","length","rightIndex","_","findLastIndex","o","preId","getContent","React","createElement","ref","uniqueId","className","boxCls","curPage","prePageInfo","_pre","leave","animateback","curPageDom","refs","classList","prePageDom","prevProps","prevState","cls","boxes_cls","jsxMenu","MenuJsx","IscrollTreeMenu","Aotoo","iscroll","onscroll","onscrollend","Action","UPDATE","ctx","SELECT","leaveContent","curState","getPage","cb","router","condition","preback","append","getWhereInfo","start","hasMounted","config","goto","target","hasOn","h","whereami","$select","whereBack"],"mappings":"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","file":"../index.js","sourcesContent":["import {Tabs} from 'aotoo-react-tabs'\nrequire('aotoo-mixins-iscroll')\nconst Popstate = SAX('Popstate');\n(function() {\n  var blockPopstateEvent = document.readyState != \"complete\";\n  window.addEventListener(\"load\", function() {\n    setTimeout(function(){ blockPopstateEvent = false; }, 0)\n  }, false)\n  window.addEventListener(\"popstate\", function(evt) {\n    if (blockPopstateEvent && document.readyState==\"complete\") {\n      evt.preventDefault()\n      evt.stopImmediatePropagation()\n    } else {\n      Popstate.emit('goback')\n      // Popstate.trigger()\n    }\n  }, false)\n}())\n\nfunction pushState(props, nohash){\n\tconst flag = props.flag ? (typeof props.flag == 'boolean' ? '#' : props.flag) : ''\n\tconst uri = flag ? props.rootUrl + flag + props.key : props.rootUrl\n  window.history.pushState(props, '', uri)\n}\n\nfunction _lru(max) {\n  //https://github.com/dominictarr/hashlru\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n  function update(key, value) {\n    cache[key] = value\n    size++\n    if (size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if (cache[key] !== undefined)\n        cache[key] = undefined\n      if (_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if (v !== undefined) return v\n      if (v = _cache[key]) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if (cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\nlet lru = _lru(50)\nlet _history = []\nlet _historyCount = 0\nlet _leftStack = []\nlet animatecss = {\n\tfade: {\n\t\tin: ' fadeIn animated-faster',\n\t\trein: ' fadeIn animated-fastest',\n\t\tout: ' fadeOut contentHide animated-fastest',\n\t\tback: ' fadeOut contentHide animated-faster'\n\t},\n\n\tleft: {\n\t\tin: ' fadeInLeft animated-faster',\n\t\trein: ' fadeIn animated-fastest',\n\t\tout: ' fadeOut contentHide animated-fastest',\n\t\tback: ' fadeOutLeft contentHide animated-faster'\n\t},\n\n\tright: {\n\t\tin: ' fadeInRight animated-faster',\n\t\trein: ' fadeIn animated-fastest',\n\t\tout: ' outHeight fadeOut contentHide animated-fastest',\n\t\tback: ' outHeight fadeOutRight contentHide animated-faster',\n\t}\n}\n\nAotoo.extend('router', function(opts, utile){\n  let dft = {\n    props: {\n      routerClass: 'routerGroup',\n      mulitple: false\n    }\n  }\n  opts = utile.merge(dft, opts)\n\n  if (opts.animatecss) {\n    animatecss = utile.merge(animatecss, opts.animatecss)\n    delete opts.animatecss\n  }\n\n  const rootUrl = location.href.split('#')[0]\n  class Router extends Tabs {\n    constructor(props){\n      super(props)\n      this.state = utile.merge(this.state, {\n        flag: true,\n        rootUrl: this.props.rootUrl || rootUrl,\n        direction: 'goto',\n        animate: this.props.animate || 'right'\n      })\n      this.prePageInfo\n\n      if (this.state.animate) {\n\t\t\t\tconst animateType = this.state.animate  // fade, left, right\n\t\t\t\tthis.animatein = animatecss[animateType]['in']\n\t\t\t\tthis.animaterein = animatecss[animateType]['rein']\n\t\t\t\tthis.animateout = animatecss[animateType]['out']\n\t\t\t\tthis.animateback = animatecss[animateType]['back']\n\t\t\t}\n\n      this.historyPush = this.historyPush.bind(this)\n      this.getRealContent = this.getRealContent.bind(this)\n      this.findPath = this.findPath.bind(this)\n    }\n    \n    componentWillMount() {\n      super.componentWillMount()\n      const that = this\n      const menuData = this.saxer.get().MenuData\n      const contentData = this.saxer.get().ContentData\n      const selectItem = menuData[this.state.select]\n      \n\n      this.on('historypush', function(opts){\n        const _path = opts.path\n        const _data = opts.data\n        const historyItem = that.findPath(_path)\n\n        that.historyPush({\n          index: historyItem.index,\n          key: historyItem.path,\n          data: _data||{}\n        })\n      })\n\n      this.on('historypop', function(opts){\n        return that.historyPop(opts)\n      })\n\n      this.emit('historypush', {\n        path: this.state.select,\n        data: {}\n      })\n    }\n\n    findPath(where){\n      const type = typeof where\n      const menu_data = this.saxer.get().MenuData\n      if (type == 'number') {\n        return menu_data[where]\n      }\n      if (type == 'string') {\n        return utile.find(menu_data, {path: where})\n      }\n    }\n\n    historyPush(props) {\n      if (this.state.flag) {\n        const curHistoryState = window.history.state\n        pushState({\n          index: props.index,\n          key: props.key,\n          path: props.key,\n          data: props.data,\n          rootUrl: this.state.rootUrl,\n          preState: curHistoryState,\n          timeLine: _historyCount,\n          flag: this.state.flag\n        })\n      } else {\n        pushState({\n          rootUrl: this.state.rootUrl,\n          flag: this.state.flag\n        }, true)\n      }\n\n      const preState = _history[_history.length - 1]\n      _history.push({\n        index: props.index,\n        key: props.key,\n        path: props.key,\n        data: props.data,\n        preState: preState,\n        timeLine: _historyCount\n      })\n\n      _historyCount++\n    }\n\n    historyPop(){\n      let state = _history.pop()\n      if (!state) return false\n      let rightState;\n      if (this.state.flag) {\n        rightState = (state && state.preState)\n        if (rightState) {\n          pushState({\n            index: rightState.index,\n            key: rightState.key,\n            data: rightState.data,\n            rootUrl: this.state.rootUrl,\n            preState: \"curHistoryState\",\n            flag: this.state.flag\n          })\n        }\n      } else {\n        rightState = _history.pop()\n        pushState({rootUrl: this.state.rootUrl, flag: this.state.flag}, true)\n      }\n\n      return rightState\n    }\n\n    getRealContent(cnt){\n      if (!cnt) return ' '\n      const InstanceContext = this.saxer.get().InstanceContext\n      const selectData = this.state.selectData\n      if (typeof cnt == 'function') {\n        let result = cnt(InstanceContext)\n        if (typeof result == 'object') {\n          if (result['$$typeof']) return result\n\n          // enter, leave, main, loaded\n          if (typeof result.enter == 'function') return result.enter(selectData)  \n          else if(typeof result.main == 'function') {\n            return result.main(selectData)\n          }\n        }\n      }\n      return cnt\n    }\n\n    getPage(boxCls){\n      const id = this.state.select\n      let pre, preId, prePage, preContent\n      let oriContent, content\n      oriContent = this.getContent(id)\n      content = this.getRealContent(oriContent)\n      \n      if (this.state.direction == 'jumpback') {\n        // content = lru.get(id)\n        // if (!content) {\n        //   oriContent = this.getContent(id)\n        //   content = this.getRealContent(oriContent)\n        // }\n\n        pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        let rightIndex = _.findLastIndex(_history, function(o) { return o.index == id })\n        if (rightIndex > -1) {\n          rightIndex += 1\n          _history = _history.slice(0, rightIndex) \n          _leftStack = _leftStack.slice(0, (rightIndex) )\n        }\n      }\n      else \n      if (this.state.direction == 'back') {\n        pre = _leftStack.pop()\n      } else {\n        pre = _leftStack.length ? _leftStack[_leftStack.length-1] : '';\n      }\n      \n      if (this.state.animate !== 'fade') {\n        if (pre && pre.id !== id) {\n          // this.prePageInfo = pre\n          // preContent = this.getRealContent(this.getContent(pre.id))\n\n          this.prePageInfo = pre\n          preContent = lru.get(pre.id)\n          if (!preContent) {\n            preContent = this.getRealContent(this.getContent(pre.id))\n          }\n\n          prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls}>{preContent}</div>\n        }\n      } else {\n        prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls} />\n      }\n      \n      \n      const curPage = <div \n          ref=\"curPage\" \n          key={utile.uniqueId('Router_Single_')} \n          className={boxCls}>\n          {content}\n        </div>\n      \n      // 下面的部分有顺序要求，不能随意放置\n      if (this.state.direction == 'goto') {\n        _leftStack.push({\n          id: id,\n          // origin: oriContent\n          // content: content,\n        })\n      }\n\n      lru.set(id, content)\n\n      return [\n        prePage,\n        curPage\n      ]\n    }\n\n    leaveContent(){\n      if (this.prePageInfo) {\n        const InstanceContext = this.saxer.get().InstanceContext\n        const _pre = this.prePageInfo.origin\n        if (typeof _pre == 'function') {\n          let result = _pre(InstanceContext)\n          if (typeof result == 'object') {\n            if (typeof result.leave == 'function') return result.leave()  \n          }\n        }\n      }\n    }\n\n    componentDidMount() {\n      let animatein = this.animatein\n      let animateout = this.animateout\n      if (this.state.direction == 'back' || this.state.direction == 'jumpback' ) {\n        animateout = this.animateback\n        animatein = this.animaterein\n      }\n      const curPageDom = this.refs.curPage\n      const prePageDom = this.refs.prePage\n      if (curPageDom) {\n        curPageDom.classList.value += animatein\n      }\n      if (prePageDom) {\n        prePageDom.classList.value += animateout\n      }\n      this.leaveContent()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // this.leaveContent()\n    }\n\n    render(){\n      const cls = !this.props.routerClass ? 'routerGroup ' : 'routerGroup ' + this.props.routerClass\n      // const boxes_cls = !this.props.mulitple ? 'routerBoxes' : 'routerBoxes mulitple'\n      const boxes_cls = !this.props.mulitple ? (this.props.animate == 'left' ? 'routerBoxes boxLeft' : this.props.animate == 'right' ? 'routerBoxes boxRight' : 'routerBoxes') : 'routerBoxes mulitple'\n\n      const jsxMenu = this.saxer.get().MenuJsx\n      const content = this.getPage(boxes_cls)\n      const IscrollTreeMenu = Aotoo.iscroll(<div className='routerMenus'>{jsxMenu}</div>, {\n        onscroll: function(){},\n        onscrollend: function(){}\n      })\n\n      return (\n        <div className={cls}>\n          { this.state.showMenu ? <IscrollTreeMenu /> : '' }\n          {content}\n        </div>\n      )\n    }\n  }\n\n  const Action = {\n    UPDATE: function(ostate, opts, ctx){\n      let state = this.curState\n      state.data = opts.data\n      return state\n    },\n\n    SELECT: function(ostate, opts, ctx){\n      let state = this.curState\n\n      // select\n      state.select = opts.select\n\n      // selectData\n      if (opts.selectData) {\n        state.selectData = opts.selectData\n      }\n\n      if (opts.direction) {\n        state.direction = opts.direction || 'goto'\n      }\n\n      if (state.direction == 'goto') {\n        ctx.emit('historypush', {\n          path: state.select,\n          data: state.selectData\n        })\n      }\n      \n      if (typeof opts.cb == 'function') {\n        setTimeout(function() { opts.cb() }, 100);\n      }\n\n      return state\n    },\n  }\n\n  // const router = Aotoo(Tabs, Action, dft)\n  const router = Aotoo(Router, Action, dft)\n  router.condition = {\n    preback: 'preback'\n  }\n  \n  router.saxer.append({\n    InstanceContext: router\n  })\n\n  Popstate.on('goback', function(){\n    return router.back()\n  })\n\n  router.extend({\n    getWhereInfo: function(where){\n      const menu_data = this.saxer.get().MenuData\n      return utile.find(menu_data, {path: where})\n    },\n    start: function(id, data){\n      if (this.hasMounted()){\n        this.goto(id, data)\n      } else {\n        if (this.config && this.config.props) {\n          this.config.props.select = id\n          this.config.props.selectData = data\n        }\n      }\n    },\n    goto: function(where, data){\n      if (typeof where != 'string') return \n      const target = this.getWhereInfo(where)\n      this.$select({\n        select: target.index,\n        selectData: data,\n        direction: 'goto'\n      })\n    },\n    back: function(where, data){\n      let condition = {}\n      if (this.hasOn('preback')) {\n        const h = _history[_history.length-1]\n        const whereami = {\n          index: h.index,\n          path: h.path,\n          data: h.data,\n          pre: h.preState,\n          flag: h.flag\n        }\n        condition = this.emit('preback', whereami)\n        if (!condition) return \n      }\n      if (where) {\n        if (typeof where != 'string') return \n        const target = this.getWhereInfo(where)\n        this.$select({\n          select: target.index,\n          selectData: utile.merge({}, data, condition),\n          direction: 'jumpback'\n        })\n      } else {\n        const whereBack = this.emit('historypop')\n        // whereBack: {\n          // index: props.index,\n          // key: props.key,\n          // data: props.data,\n          // rootUrl: this.state.rootUrl,\n          // preState: curHistoryState,\n          // timeLine: _historyCount,\n          // flag: this.state.flag\n        //}\n        if (whereBack) {\n          this.$select({\n            select: whereBack.index,\n            selectData: utile.merge({}, whereBack.data, condition),\n            direction: 'back'\n          })\n          return whereBack\n        } else {\n          pushState({rootUrl: rootUrl}, true)\n        }\n      }\n    }\n  })\n\n  return router\n})"]}