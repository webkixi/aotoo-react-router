{"version":3,"sources":["index.js"],"names":["_os","ua","ret","android","match","ios","mobile","Popstate","arguments","length","undefined","stat","cb","params","_historyCount","blockPopstateEvent","evt","preventDefault","props","flag","stopImmediatePropagation","key","rootUrl","window","history","pushState","uri","_lru","max","anchorHash","value","cache","size","_cache","Error","anchorHref","Object","create","has","remove","update","v","clear","_aotooReactTabs","require","SAX","_history","_leftStack","os","navigator","userAgent","addEventListener","e","target","nodeName","href","indexOf","document","readyState","setTimeout","lru","animatecss","fade","set","rein","out","left","in","back","opts","utile","sessionStorage","likeApp","right","merge","dft","extend","location","split","_Tabs","routerClass","_classCallCheck","this","Router","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","mulitple","state","direction","animate","animatein","animateType","animaterein","animateout","animateback","historyPush","bind","getRealContent","findPath","_inherits","Tabs","_createClass","menuData","saxer","get","MenuData","ContentData","select","on","path","that","index","data","historyPop","emit","where","type","_typeof","menu_data","historyItem","_data","curHistoryState","preState","timeLine","push","rightState","cnt","pre","InstanceContext","_pre","from","parent","selectData","result","enter","main","title","preContent","idf","id","rightIndex","_","findLastIndex","o","slice","pop","preId","prePage","content","prePageInfo","getContent","className","boxCls","uniqueId","oriContent","ref","curPage","origin","leave","refs","curPageDom","classList","prePageDom","leaveContent","prevProps","prevState","cls","boxes_cls","jsxMenu","MenuJsx","getPage","IscrollTreeMenu","Aotoo","iscroll","React","createElement","onscroll","onscrollend","Action","ctx","curState","SELECT","ostate","router","condition","preback","append","UPDATE","param","getWhereInfo","find","getHistory","setHistory","record","stack","goto","config","save","name","sessName","JSON","stringify","cur","sessData","timmer","storage","setItem","parse","removeItem","clearHistory","page","_this2","once","next","off","resultBeforegoto","$select","_this3","resultBeforeback","result_beforegoto","result_beforeback","h","whereami","whereBack"],"mappings":"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","file":"../index.js","sourcesContent":["import { Tabs } from 'aotoo-react-tabs'\nrequire('aotoo-mixins-iscroll')\nconst Popstate = SAX('Popstate');\nvar _history = []\nvar _historyCount = 0\nvar _leftStack = []\nvar os\n\nfunction _os(ua) {\n  var ret = {},\n    android = ua.match(/(?:Android);?[\\s\\/]+([\\d.]+)?/),\n    ios = ua.match(/(?:iPad|iPod|iPhone).*OS\\s([\\d_]+)/);\n  ret.mobile = !!(android || ios)\n  return ret;\n}\n\nlet stat = true\nfunction once(cb, delay=1000) {\n  function next(params) {\n    stat = true\n  }\n  if (stat) {\n    stat = false\n    cb(next)\n  }\n\n  // clearTimeout(mytimmer)\n  // mytimmer = setTimeout(() => {\n  //   if (stat) {\n  //     stat = false\n  //     cb(next)\n  //   }\n  // }, delay);\n}\n\n(function () {\n  var anchorHash = false\n  var anchorHref\n  os = _os(navigator.userAgent)\n\n  document.addEventListener('click', function (e) {\n    var target = e.target\n    if (target.nodeName == 'A') {\n      anchorHash = false\n      anchorHref = target.href\n      anchorHash = target.href.indexOf('#') > -1 ? true : false\n    }\n  }, false)\n\n  var blockPopstateEvent = document.readyState != \"complete\";\n  window.addEventListener(\"load\", function () {\n    setTimeout(\n      function () {\n        blockPopstateEvent = false;\n      },\n      0)\n  }, false)\n\n  window.addEventListener(\"popstate\", function (evt) {\n    if (blockPopstateEvent && document.readyState == \"complete\") {\n      evt.preventDefault()\n      evt.stopImmediatePropagation()\n    } else {\n      if (anchorHash) {\n        /* do something */\n      } else {\n        Popstate.emit('__goback');\n      }\n      anchorHref = ''\n      anchorHash = false\n    }\n  }, false)\n}())\n\nfunction pushState(props, nohash) {\n  const flag = props.flag ? (typeof props.flag == 'boolean' ? '#' : props.flag) : ''\n  const uri = flag ? props.rootUrl + flag + props.key : props.rootUrl\n  window.history.pushState(props, '', uri)\n}\n\nfunction _lru(max) {\n  //https://github.com/dominictarr/hashlru\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n  function update(key, value) {\n    cache[key] = value\n    size++\n    if (size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if (cache[key] !== undefined)\n        cache[key] = undefined\n      if (_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if (v !== undefined) return v\n      if (v = _cache[key]) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if (cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\nlet lru = _lru(50)\nlet animatecss = {\n  fade: {\n    in: ' fadeIn animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOut contentHide animated-faster'\n  },\n\n  left: {\n    in: ' fadeInLeft animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOutLeft contentHide animated-faster'\n  },\n\n  right: {\n    in: ' fadeInRight animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' outHeight fadeOut contentHide animated-fastest',\n    back: ' outHeight fadeOutRight contentHide animated-faster',\n  }\n}\n\nAotoo.extend('router', function (opts, utile) {\n  let dft = {\n    storage: window.sessionStorage,\n    likeApp: false,   // 模仿app的效果，比如动画切换，保持2个页面\n    props: {\n      routerClass: 'routerGroup',\n      mulitple: false\n    }\n  }\n  opts = utile.merge(dft, opts)\n\n  if (opts.animatecss) {\n    animatecss = utile.merge(animatecss, opts.animatecss)\n    delete opts.animatecss\n  }\n\n  const rootUrl = location.href.split('#')[0]\n  class Router extends Tabs {\n    constructor(props) {\n      super(props)\n      this.state = utile.merge(this.state, {\n        flag: this.props.flag || '#',\n        rootUrl: this.props.rootUrl || rootUrl,\n        direction: 'goto',\n        animate: this.props.animate || 'right'\n      })\n      this.prePageInfo\n\n      if (this.state.animate) {\n        const animateType = this.state.animate  // fade, left, right\n        this.animatein = animatecss[animateType]['in']\n        this.animaterein = animatecss[animateType]['rein']\n        this.animateout = animatecss[animateType]['out']\n        this.animateback = animatecss[animateType]['back']\n      }\n\n      this.historyPush = this.historyPush.bind(this)\n      this.getRealContent = this.getRealContent.bind(this)\n      this.findPath = this.findPath.bind(this)\n    }\n\n    componentWillMount() {\n      super.componentWillMount()\n      const that = this\n      const menuData = this.saxer.get().MenuData\n      const contentData = this.saxer.get().ContentData\n      const selectItem = menuData[this.state.select]\n\n\n      this.on('historypush', function (opts) {\n        const _path = opts.path\n        const _data = opts.data\n        const historyItem = that.findPath(_path)\n\n        that.historyPush({\n          index: historyItem.index,\n          key: historyItem.path,\n          data: _data || {}\n        })\n      })\n\n      this.on('historypop', function (opts) {\n        return that.historyPop(opts)\n      })\n\n      this.emit('historypush', {\n        path: this.state.select,\n        data: {}\n      })\n    }\n\n    findPath(where) {\n      const type = typeof where\n      const menu_data = this.saxer.get().MenuData\n      if (type == 'number') {\n        return menu_data[where]\n      }\n      if (type == 'string') {\n        return utile.find(menu_data, { path: where })\n      }\n    }\n\n    historyPush(props) {\n      if (this.state.flag) {\n        const curHistoryState = window.history.state\n        pushState({\n          index: props.index,\n          key: props.key,\n          path: props.key,\n          data: props.data,\n          rootUrl: this.state.rootUrl,\n          preState: curHistoryState,\n          timeLine: _historyCount,\n          flag: this.state.flag\n        })\n      } else {\n        pushState({\n          rootUrl: this.state.rootUrl,\n          flag: this.state.flag\n        }, true)\n      }\n      const preState = _history[_history.length - 1]\n      _history.push({\n        index: props.index,\n        key: props.key,\n        path: props.key,\n        data: props.data,\n        preState: preState,\n        timeLine: _historyCount\n      })\n\n      _historyCount++\n    }\n\n    historyPop() {\n      let state = _history.pop()\n      if (!state) return false\n      let rightState;\n      if (this.state.flag) {\n        rightState = (state && state.preState)\n        if (rightState) {\n          pushState({\n            index: rightState.index,\n            key: rightState.key,\n            data: rightState.data,\n            rootUrl: this.state.rootUrl,\n            preState: \"curHistoryState\",\n            flag: this.state.flag\n          })\n        }\n      } else {\n        rightState = _history.pop()\n        pushState({ rootUrl: this.state.rootUrl, flag: this.state.flag }, true)\n      }\n\n      return rightState\n    }\n\n    getRealContent(cnt, pre) {\n      if (!cnt) return ' '\n      let InstanceContext = this.saxer.get().InstanceContext || {}\n      let _pre = this.findPath(pre)\n      InstanceContext.from = (function () {\n        if (_pre) {\n          return {\n            index: _pre.index,\n            path: _pre.path,\n            title: _pre.title,\n            idf: _pre.idf,\n            parent: _pre.parent,\n            attr: _pre.attr\n          }\n        }\n      })()\n      const selectData = this.state.selectData\n      if (typeof cnt == 'function') {\n        let result = cnt(InstanceContext)\n        if (typeof result == 'object') {\n          if (result['$$typeof']) return result\n\n          // enter, leave, main, loaded\n          if (typeof result.enter == 'function') return result.enter(selectData)\n          else if (typeof result.main == 'function') {\n            return result.main(selectData)\n          }\n        }\n      }\n      return cnt\n    }\n\n    getPage(boxCls) {\n      const id = this.state.select\n      let pre, preId, prePage, preContent\n      let oriContent, content\n      oriContent = this.getContent(id)\n\n      if (this.state.direction == 'jumpback') {\n        // content = lru.get(id)\n        // if (!content) {\n        //   oriContent = this.getContent(id)\n        //   content = this.getRealContent(oriContent)\n        // }\n\n        pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        let rightIndex = _.findLastIndex(_history, function (o) { return o.index == id })\n        if (rightIndex > -1) {\n          rightIndex += 1\n          _history = _history.slice(0, rightIndex)\n          _leftStack = _leftStack.slice(0, (rightIndex))\n        }\n      }\n      else\n        if (this.state.direction == 'back') {\n          pre = _leftStack.pop()\n        } else {\n          pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        }\n\n      if (this.state.animate) {\n        if (this.state.animate == 'fade' || !dft.likeApp) {\n          prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls} />\n        } else {\n          if (pre && pre.id !== id) {\n            // this.prePageInfo = pre\n            // preContent = this.getRealContent(this.getContent(pre.id))\n\n            this.prePageInfo = pre\n            preContent = lru.get(pre.id)\n            if (!preContent) {\n              preContent = this.getRealContent(this.getContent(pre.id))\n            }\n\n            prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls}>{preContent}</div>\n          }\n        }\n      }\n\n      content = this.getRealContent(oriContent, pre)\n\n      const curPage = <div\n        ref=\"curPage\"\n        key={utile.uniqueId('Router_Single_')}\n        className={boxCls}>\n        {content}\n      </div>\n\n      // 下面的部分有顺序要求，不能随意放置\n      if (this.state.direction == 'goto') {\n        _leftStack.push({\n          id: id,\n          // origin: oriContent\n          // content: content,\n        })\n      }\n\n      lru.set(id, content)\n\n      return [\n        prePage,\n        curPage\n      ]\n    }\n\n    leaveContent() {\n      if (this.prePageInfo) {\n        const InstanceContext = this.saxer.get().InstanceContext\n        const _pre = this.prePageInfo.origin\n        if (typeof _pre == 'function') {\n          let result = _pre(InstanceContext)\n          if (typeof result == 'object') {\n            if (typeof result.leave == 'function') return result.leave()\n          }\n        }\n      }\n    }\n\n    componentDidMount() {\n      let animatein = this.animatein\n      let animateout = this.animateout\n      if (this.state.direction == 'back' || this.state.direction == 'jumpback') {\n        animateout = this.animateback\n        animatein = this.animaterein\n      }\n      const curPageDom = this.refs.curPage\n      const prePageDom = this.refs.prePage\n      if (curPageDom) {\n        curPageDom.classList.value += animatein\n      }\n      if (prePageDom) {\n        prePageDom.classList.value += animateout\n      }\n      this.leaveContent()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // this.leaveContent()\n    }\n\n    render() {\n      const cls = !this.props.routerClass ? 'routerGroup ' : 'routerGroup ' + this.props.routerClass\n      // const boxes_cls = !this.props.mulitple ? 'routerBoxes' : 'routerBoxes mulitple'\n      const boxes_cls = !this.props.mulitple ? (this.props.animate == 'left' ? 'routerBoxes boxLeft' : this.props.animate == 'right' ? 'routerBoxes boxRight' : 'routerBoxes') : 'routerBoxes mulitple'\n\n      const jsxMenu = this.saxer.get().MenuJsx\n      const content = this.getPage(boxes_cls)\n      const IscrollTreeMenu = Aotoo.iscroll(<div className='routerMenus'>{jsxMenu}</div>, {\n        onscroll: function () { },\n        onscrollend: function () { }\n      })\n\n      return (\n        <div className={cls}>\n          {this.state.showMenu ? <IscrollTreeMenu /> : ''}\n          {content}\n        </div>\n      )\n    }\n  }\n\n  const Action = {\n    UPDATE: function (ostate, opts, ctx) {\n      let state = this.curState\n      state.data = opts.data\n      return state\n    },\n\n    SELECT: function (ostate, opts, ctx) {\n      let state = this.curState\n\n      // select\n      state.select = opts.select\n\n      // selectData\n      if (opts.selectData) {\n        state.selectData = opts.selectData\n      }\n\n      if (opts.direction) {\n        state.direction = opts.direction || 'goto'\n      }\n\n      if (state.direction == 'goto') {\n        ctx.emit('historypush', {\n          path: state.select,\n          data: state.selectData\n        })\n      }\n\n      if (typeof opts.cb == 'function') {\n        setTimeout(function () { opts.cb() }, 100);\n      }\n\n      return state\n    },\n  }\n\n  // const router = Aotoo(Tabs, Action, dft)\n  const router = Aotoo(Router, Action, dft)\n  router.condition = {\n    preback: 'preback'\n  }\n\n  router.saxer.append({\n    InstanceContext: router\n  })\n\n  Popstate.on('__goback', function (param) {\n    return router.back()\n\n    // let hash\n    // if (param.href.indexOf('#')>-1) {\n    //   hash = param.href.substr(param.href.indexOf('#')+1)\n    // }\n    // // if (!hash) {\n    // //   return router.back()\n    // // }\n    // if (hash) {\n    //   const lastItem = _history[(_history.length - 1)]\n    //   if (hash !== lastItem.path) {\n    //     return router.back()\n    //   }\n    // }\n  })\n\n  let timmer = {\n    goto: '',\n    back: ''\n  }\n\n  router.extend({\n    getWhereInfo: function (where) {\n      const menu_data = this.saxer.get().MenuData\n      return utile.find(menu_data, { path: where })\n    },\n    getHistory: function (params) {\n      return _history\n    },\n    setHistory: function (record) {\n      if (record) {\n        _history = record.history || _history\n        _leftStack = record.stack || _leftStack\n      }\n    },\n    clearHistory: function (params) {\n      _history = []\n    },\n    start: function (id, data) {\n      if (this.hasMounted()) {\n        this.goto(id, data)\n      } else {\n        if (this.config && this.config.props) {\n          this.config.props.select = id\n          this.config.props.selectData = data\n        }\n      }\n    },\n    save: function (name, params) {\n      let sessName\n      if (name) {\n        // sessName = name + '_' + this.globalName\n        sessName = name\n        const his = JSON.stringify(_history)\n        const stack = JSON.stringify(_leftStack)\n        const cur = _history[_history.length - 1]\n\n        const sessData = {\n          history: _history,\n          stack: _leftStack,\n          current: cur\n        }\n        dft.storage.setItem(sessName, JSON.stringify(sessData))\n      }\n    },\n    restore: function (name, params) {\n      let sessName\n      if (name) {\n        // sessName = name + '_' + this.globalName\n        sessName = name\n        if (dft.storage[sessName]) {\n          const sessData = JSON.parse(dft.storage[sessName])\n          dft.storage.removeItem(sessName)\n\n          var cur = {\n            page: sessData.history.pop(),\n            stack: sessData.stack.pop()\n          }\n\n          _history = sessData.history\n          _leftStack = sessData.stack\n\n          // _history.pop()\n          // _leftStack.pop()\n          this.start(\n            cur.page.path,\n            cur.page.data\n          )\n\n          return true\n        }\n      }\n    },\n\n    goto: function (where, data) {\n      once( next => {\n        const result_beforegoto = this.emit('_beforeGoto', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n\n          setHistory: this.setHistory\n        })\n        this.off('_beforeGoto')\n\n        const resultBeforegoto = this.emit('beforeGoto', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n\n          param: {\n            path: where,\n            data: data\n          },\n\n          setHistory: this.setHistory\n        })\n\n        if (result_beforegoto) return\n        if (resultBeforegoto) return\n\n        if (typeof where != 'string') return\n        const target = this.getWhereInfo(where)\n        if (target) {\n          this.$select({\n            select: target.index,\n            selectData: data,\n            direction: 'goto'\n          })\n        }\n        setTimeout(() => {\n          next()\n        }, 1000);\n      })\n    },\n\n    back: function (where, data) {\n      once( next => {\n        const result_beforeback = this.emit('_beforeBack', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n          setHistory: this.setHistory\n        })\n  \n        this.off('_beforeBack')\n  \n        const resultBeforeback = this.emit('beforeBack', {\n          record: {\n            history: _history,\n            // stack: _leftStack,\n          },\n          param: {\n            path: where,\n            data: data\n          },\n          setHistory: this.setHistory\n        })\n  \n        if (result_beforeback) return\n        if (resultBeforeback) return\n  \n        let condition = {}\n        if (this.hasOn('preback')) {\n          const h = _history[_history.length - 1]\n          const whereami = {\n            index: h.index,\n            path: h.path,\n            data: h.data,\n            pre: h.preState,\n            flag: h.flag\n          }\n          condition = this.emit('preback', whereami)\n          if (!condition) return\n        }\n        if (where) {\n          if (typeof where != 'string') return\n          const target = this.getWhereInfo(where)\n          if (target) {\n            this.$select({\n              select: target.index,\n              selectData: utile.merge({}, data, condition),\n              direction: 'jumpback'\n            })\n          }\n        } else {\n          const whereBack = this.emit('historypop')\n          // whereBack: {\n          // index: props.index,\n          // key: props.key,\n          // data: props.data,\n          // rootUrl: this.state.rootUrl,\n          // preState: curHistoryState,\n          // timeLine: _historyCount,\n          // flag: this.state.flag\n          //}\n          if (whereBack) {\n            this.$select({\n              select: whereBack.index,\n              selectData: utile.merge({}, whereBack.data, condition),\n              direction: 'back'\n            })\n            return whereBack\n          } else {\n            if (window.history.length) {\n              history.back()\n            } else {\n              pushState({ rootUrl: rootUrl }, true)\n            }\n          }\n        }\n        setTimeout(() => {\n          next()\n        }, 1000);\n      })\n    }\n  })\n\n  return router\n})"]}