{"version":3,"sources":["index.js"],"names":["_os","ua","ret","android","match","ios","mobile","evt","stopImmediatePropagation","flag","props","uri","anchorHash","rootUrl","key","window","history","pushState","_lru","max","update","value","cache","size","Object","create","_cache","has","undefined","Error","remove","v","set","clear","get","_aotooReactTabs","require","Popstate","SAX","_history","_historyCount","_leftStack","os","userAgent","document","addEventListener","e","target","nodeName","href","indexOf","blockPopstateEvent","readyState","setTimeout","anchorHref","emit","lru","fade","in","left","animatecss","out","back","rein","opts","utile","dft","storage","sessionStorage","right","merge","extend","routerClass","split","mulitple","_Tabs","Router","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","state","animate","prePageInfo","animateType","animatein","animaterein","animateout","animateback","historyPush","bind","getRealContent","_inherits","Tabs","_createClass","_get","prototype","menuData","saxer","MenuData","ContentData","select","on","path","_data","data","historyItem","that","findPath","_path","index","historyPop","contentData","selectItem","where","type","_typeof","find","menu_data","preState","curHistoryState","timeLine","length","push","pop","rightState","cnt","pre","InstanceContext","title","_pre","attr","result","enter","selectData","main","idf","parent","oriContent","getContent","id","direction","rightIndex","slice","preContent","likeApp","prePage","ref","uniqueId","className","boxCls","content","curPage","React","createElement","origin","leave","curPageDom","refs","prePageDom","classList","leaveContent","prevProps","prevState","cls","boxes_cls","jsxMenu","MenuJsx","getPage","IscrollTreeMenu","Aotoo","iscroll","onscroll","onscrollend","Action","UPDATE","ostate","ctx","SELECT","curState","cb","router","condition","preback","param","getHistory","params","setHistory","record","stack","clearHistory","hasMounted","goto","config","save","name","sessName","JSON","stringify","cur","sessData","current","setItem","restore","parse","removeItem","page","start","his","result_beforegoto","resultBeforegoto","getWhereInfo","$select","result_beforeback","resultBeforeback","h","whereami","whereBack","hasOn"],"mappings":"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","file":"../index.js","sourcesContent":["import { Tabs } from 'aotoo-react-tabs'\nrequire('aotoo-mixins-iscroll')\nconst Popstate = SAX('Popstate');\nvar _history = []\nvar _historyCount = 0\nvar _leftStack = []\nvar os\n\nfunction _os(ua) {\n  var ret = {},\n    android = ua.match(/(?:Android);?[\\s\\/]+([\\d.]+)?/),\n    ios = ua.match(/(?:iPad|iPod|iPhone).*OS\\s([\\d_]+)/);\n  ret.mobile = !!(android || ios)\n  return ret;\n}\n\n(function () {\n  var anchorHash = false\n  var anchorHref\n  os = _os(navigator.userAgent)\n\n  document.addEventListener('click', function (e) {\n    var target = e.target\n    if (target.nodeName == 'A') {\n      anchorHash = false\n      anchorHref = target.href\n      anchorHash = target.href.indexOf('#') > -1 ? true : false\n    }\n  }, false)\n\n  var blockPopstateEvent = document.readyState != \"complete\";\n  window.addEventListener(\"load\", function () {\n    setTimeout(\n      function () {\n        blockPopstateEvent = false;\n      },\n      0)\n  }, false)\n\n  window.addEventListener(\"popstate\", function (evt) {\n    if (blockPopstateEvent && document.readyState == \"complete\") {\n      evt.preventDefault()\n      evt.stopImmediatePropagation()\n    } else {\n      if (anchorHash) {\n        /* do something */\n      } else {\n        Popstate.emit('__goback');\n      }\n      anchorHref = ''\n      anchorHash = false\n    }\n  }, false)\n}())\n\nfunction pushState(props, nohash) {\n  const flag = props.flag ? (typeof props.flag == 'boolean' ? '#' : props.flag) : ''\n  const uri = flag ? props.rootUrl + flag + props.key : props.rootUrl\n  window.history.pushState(props, '', uri)\n}\n\nfunction _lru(max) {\n  //https://github.com/dominictarr/hashlru\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n  function update(key, value) {\n    cache[key] = value\n    size++\n    if (size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if (cache[key] !== undefined)\n        cache[key] = undefined\n      if (_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if (v !== undefined) return v\n      if (v = _cache[key]) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if (cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\nlet lru = _lru(50)\nlet animatecss = {\n  fade: {\n    in: ' fadeIn animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOut contentHide animated-faster'\n  },\n\n  left: {\n    in: ' fadeInLeft animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' fadeOut contentHide animated-fastest',\n    back: ' fadeOutLeft contentHide animated-faster'\n  },\n\n  right: {\n    in: ' fadeInRight animated-faster',\n    rein: ' fadeIn animated-fastest',\n    out: ' outHeight fadeOut contentHide animated-fastest',\n    back: ' outHeight fadeOutRight contentHide animated-faster',\n  }\n}\n\nAotoo.extend('router', function (opts, utile) {\n  let dft = {\n    storage: window.sessionStorage,\n    likeApp: false,   // 模仿app的效果，比如动画切换，保持2个页面\n    props: {\n      routerClass: 'routerGroup',\n      mulitple: false\n    }\n  }\n  opts = utile.merge(dft, opts)\n\n  if (opts.animatecss) {\n    animatecss = utile.merge(animatecss, opts.animatecss)\n    delete opts.animatecss\n  }\n\n  const rootUrl = location.href.split('#')[0]\n  class Router extends Tabs {\n    constructor(props) {\n      super(props)\n      this.state = utile.merge(this.state, {\n        flag: this.props.flag || '#',\n        rootUrl: this.props.rootUrl || rootUrl,\n        direction: 'goto',\n        animate: this.props.animate || 'right'\n      })\n      this.prePageInfo\n\n      if (this.state.animate) {\n        const animateType = this.state.animate  // fade, left, right\n        this.animatein = animatecss[animateType]['in']\n        this.animaterein = animatecss[animateType]['rein']\n        this.animateout = animatecss[animateType]['out']\n        this.animateback = animatecss[animateType]['back']\n      }\n\n      this.historyPush = this.historyPush.bind(this)\n      this.getRealContent = this.getRealContent.bind(this)\n      this.findPath = this.findPath.bind(this)\n    }\n\n    componentWillMount() {\n      super.componentWillMount()\n      const that = this\n      const menuData = this.saxer.get().MenuData\n      const contentData = this.saxer.get().ContentData\n      const selectItem = menuData[this.state.select]\n\n\n      this.on('historypush', function (opts) {\n        const _path = opts.path\n        const _data = opts.data\n        const historyItem = that.findPath(_path)\n\n        that.historyPush({\n          index: historyItem.index,\n          key: historyItem.path,\n          data: _data || {}\n        })\n      })\n\n      this.on('historypop', function (opts) {\n        return that.historyPop(opts)\n      })\n\n      this.emit('historypush', {\n        path: this.state.select,\n        data: {}\n      })\n    }\n\n    findPath(where) {\n      const type = typeof where\n      const menu_data = this.saxer.get().MenuData\n      if (type == 'number') {\n        return menu_data[where]\n      }\n      if (type == 'string') {\n        return utile.find(menu_data, { path: where })\n      }\n    }\n\n    historyPush(props) {\n      if (this.state.flag) {\n        const curHistoryState = window.history.state\n        pushState({\n          index: props.index,\n          key: props.key,\n          path: props.key,\n          data: props.data,\n          rootUrl: this.state.rootUrl,\n          preState: curHistoryState,\n          timeLine: _historyCount,\n          flag: this.state.flag\n        })\n      } else {\n        pushState({\n          rootUrl: this.state.rootUrl,\n          flag: this.state.flag\n        }, true)\n      }\n      const preState = _history[_history.length - 1]\n      _history.push({\n        index: props.index,\n        key: props.key,\n        path: props.key,\n        data: props.data,\n        preState: preState,\n        timeLine: _historyCount\n      })\n\n      _historyCount++\n    }\n\n    historyPop() {\n      let state = _history.pop()\n      if (!state) return false\n      let rightState;\n      if (this.state.flag) {\n        rightState = (state && state.preState)\n        if (rightState) {\n          pushState({\n            index: rightState.index,\n            key: rightState.key,\n            data: rightState.data,\n            rootUrl: this.state.rootUrl,\n            preState: \"curHistoryState\",\n            flag: this.state.flag\n          })\n        }\n      } else {\n        rightState = _history.pop()\n        pushState({ rootUrl: this.state.rootUrl, flag: this.state.flag }, true)\n      }\n\n      return rightState\n    }\n\n    getRealContent(cnt, pre) {\n      if (!cnt) return ' '\n      let InstanceContext = this.saxer.get().InstanceContext || {}\n      let _pre = this.findPath(pre)\n      InstanceContext.from = (function () {\n        if (_pre) {\n          return {\n            index: _pre.index,\n            path: _pre.path,\n            title: _pre.title,\n            idf: _pre.idf,\n            parent: _pre.parent,\n            attr: _pre.attr\n          }\n        }\n      })()\n      const selectData = this.state.selectData\n      if (typeof cnt == 'function') {\n        let result = cnt(InstanceContext)\n        if (typeof result == 'object') {\n          if (result['$$typeof']) return result\n\n          // enter, leave, main, loaded\n          if (typeof result.enter == 'function') return result.enter(selectData)\n          else if (typeof result.main == 'function') {\n            return result.main(selectData)\n          }\n        }\n      }\n      return cnt\n    }\n\n    getPage(boxCls) {\n      const id = this.state.select\n      let pre, preId, prePage, preContent\n      let oriContent, content\n      oriContent = this.getContent(id)\n\n      if (this.state.direction == 'jumpback') {\n        // content = lru.get(id)\n        // if (!content) {\n        //   oriContent = this.getContent(id)\n        //   content = this.getRealContent(oriContent)\n        // }\n\n        pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        let rightIndex = _.findLastIndex(_history, function (o) { return o.index == id })\n        if (rightIndex > -1) {\n          rightIndex += 1\n          _history = _history.slice(0, rightIndex)\n          _leftStack = _leftStack.slice(0, (rightIndex))\n        }\n      }\n      else\n        if (this.state.direction == 'back') {\n          pre = _leftStack.pop()\n        } else {\n          pre = _leftStack.length ? _leftStack[_leftStack.length - 1] : '';\n        }\n\n      if (this.state.animate) {\n        if (this.state.animate == 'fade' || !dft.likeApp) {\n          prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls} />\n        } else {\n          if (pre && pre.id !== id) {\n            // this.prePageInfo = pre\n            // preContent = this.getRealContent(this.getContent(pre.id))\n\n            this.prePageInfo = pre\n            preContent = lru.get(pre.id)\n            if (!preContent) {\n              preContent = this.getRealContent(this.getContent(pre.id))\n            }\n\n            prePage = <div ref='prePage' key={utile.uniqueId('Router_Single_')} className={boxCls}>{preContent}</div>\n          }\n        }\n      }\n\n      content = this.getRealContent(oriContent, pre)\n\n      const curPage = <div\n        ref=\"curPage\"\n        key={utile.uniqueId('Router_Single_')}\n        className={boxCls}>\n        {content}\n      </div>\n\n      // 下面的部分有顺序要求，不能随意放置\n      if (this.state.direction == 'goto') {\n        _leftStack.push({\n          id: id,\n          // origin: oriContent\n          // content: content,\n        })\n      }\n\n      lru.set(id, content)\n\n      return [\n        prePage,\n        curPage\n      ]\n    }\n\n    leaveContent() {\n      if (this.prePageInfo) {\n        const InstanceContext = this.saxer.get().InstanceContext\n        const _pre = this.prePageInfo.origin\n        if (typeof _pre == 'function') {\n          let result = _pre(InstanceContext)\n          if (typeof result == 'object') {\n            if (typeof result.leave == 'function') return result.leave()\n          }\n        }\n      }\n    }\n\n    componentDidMount() {\n      let animatein = this.animatein\n      let animateout = this.animateout\n      if (this.state.direction == 'back' || this.state.direction == 'jumpback') {\n        animateout = this.animateback\n        animatein = this.animaterein\n      }\n      const curPageDom = this.refs.curPage\n      const prePageDom = this.refs.prePage\n      if (curPageDom) {\n        curPageDom.classList.value += animatein\n      }\n      if (prePageDom) {\n        prePageDom.classList.value += animateout\n      }\n      this.leaveContent()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // this.leaveContent()\n    }\n\n    render() {\n      const cls = !this.props.routerClass ? 'routerGroup ' : 'routerGroup ' + this.props.routerClass\n      // const boxes_cls = !this.props.mulitple ? 'routerBoxes' : 'routerBoxes mulitple'\n      const boxes_cls = !this.props.mulitple ? (this.props.animate == 'left' ? 'routerBoxes boxLeft' : this.props.animate == 'right' ? 'routerBoxes boxRight' : 'routerBoxes') : 'routerBoxes mulitple'\n\n      const jsxMenu = this.saxer.get().MenuJsx\n      const content = this.getPage(boxes_cls)\n      const IscrollTreeMenu = Aotoo.iscroll(<div className='routerMenus'>{jsxMenu}</div>, {\n        onscroll: function () { },\n        onscrollend: function () { }\n      })\n\n      return (\n        <div className={cls}>\n          {this.state.showMenu ? <IscrollTreeMenu /> : ''}\n          {content}\n        </div>\n      )\n    }\n  }\n\n  const Action = {\n    UPDATE: function (ostate, opts, ctx) {\n      let state = this.curState\n      state.data = opts.data\n      return state\n    },\n\n    SELECT: function (ostate, opts, ctx) {\n      let state = this.curState\n\n      // select\n      state.select = opts.select\n\n      // selectData\n      if (opts.selectData) {\n        state.selectData = opts.selectData\n      }\n\n      if (opts.direction) {\n        state.direction = opts.direction || 'goto'\n      }\n\n      if (state.direction == 'goto') {\n        ctx.emit('historypush', {\n          path: state.select,\n          data: state.selectData\n        })\n      }\n\n      if (typeof opts.cb == 'function') {\n        setTimeout(function () { opts.cb() }, 100);\n      }\n\n      return state\n    },\n  }\n\n  // const router = Aotoo(Tabs, Action, dft)\n  const router = Aotoo(Router, Action, dft)\n  router.condition = {\n    preback: 'preback'\n  }\n\n  router.saxer.append({\n    InstanceContext: router\n  })\n\n  Popstate.on('__goback', function (param) {\n    return router.back()\n\n    // let hash\n    // if (param.href.indexOf('#')>-1) {\n    //   hash = param.href.substr(param.href.indexOf('#')+1)\n    // }\n    // // if (!hash) {\n    // //   return router.back()\n    // // }\n    // if (hash) {\n    //   const lastItem = _history[(_history.length - 1)]\n    //   if (hash !== lastItem.path) {\n    //     return router.back()\n    //   }\n    // }\n  })\n\n  router.extend({\n    getWhereInfo: function (where) {\n      const menu_data = this.saxer.get().MenuData\n      return utile.find(menu_data, { path: where })\n    },\n    getHistory: function (params) {\n      return _history\n    },\n    setHistory: function (record) {\n      if (record) {\n        _history = record.history || _history\n        _leftStack = record.stack || _leftStack\n      }\n    },\n    clearHistory: function (params) {\n      _history = []\n    },\n    start: function (id, data) {\n      if (this.hasMounted()) {\n        this.goto(id, data)\n      } else {\n        if (this.config && this.config.props) {\n          this.config.props.select = id\n          this.config.props.selectData = data\n        }\n      }\n    },\n    save: function (name, params) {\n      let sessName\n      if (name) {\n        // sessName = name + '_' + this.globalName\n        sessName = name\n        const his = JSON.stringify(_history)\n        const stack = JSON.stringify(_leftStack)\n        const cur = _history[_history.length - 1]\n\n        const sessData = {\n          history: _history,\n          stack: _leftStack,\n          current: cur\n        }\n        dft.storage.setItem(sessName, JSON.stringify(sessData))\n      }\n    },\n    restore: function (name, params) {\n      let sessName\n      if (name) {\n        // sessName = name + '_' + this.globalName\n        sessName = name\n        if (dft.storage[sessName]) {\n          const sessData = JSON.parse(dft.storage[sessName])\n          dft.storage.removeItem(sessName)\n\n          var cur = {\n            page: sessData.history.pop(),\n            stack: sessData.stack.pop()\n          }\n\n          _history = sessData.history\n          _leftStack = sessData.stack\n\n          // _history.pop()\n          // _leftStack.pop()\n          this.start(\n            cur.page.path,\n            cur.page.data\n          )\n\n          return true\n        }\n      }\n    },\n\n    goto: function (where, data) {\n      const result_beforegoto = this.emit('_beforeGoto', {\n        record: {\n          history: _history,\n          // stack: _leftStack,\n        },\n        param: {\n          path: where,\n          data: data\n        },\n\n        setHistory: this.setHistory\n      })\n      this.off('_beforeGoto')\n\n      const resultBeforegoto = this.emit('beforeGoto', {\n        record: {\n          history: _history,\n          // stack: _leftStack,\n        },\n\n        param: {\n          path: where,\n          data: data\n        },\n\n        setHistory: this.setHistory\n      })\n\n      if (result_beforegoto) return\n      if (resultBeforegoto) return\n\n      if (typeof where != 'string') return\n      const target = this.getWhereInfo(where)\n      if (target) {\n        this.$select({\n          select: target.index,\n          selectData: data,\n          direction: 'goto'\n        })\n      }\n    },\n\n    back: function (where, data) {\n      const result_beforeback = this.emit('_beforeBack', {\n        record: {\n          history: _history,\n          // stack: _leftStack,\n        },\n        param: {\n          path: where,\n          data: data\n        },\n        setHistory: this.setHistory\n      })\n\n      this.off('_beforeBack')\n\n      const resultBeforeback = this.emit('beforeBack', {\n        record: {\n          history: _history,\n          // stack: _leftStack,\n        },\n        param: {\n          path: where,\n          data: data\n        },\n        setHistory: this.setHistory\n      })\n\n      if (result_beforeback) return\n      if (resultBeforeback) return\n\n      let condition = {}\n      if (this.hasOn('preback')) {\n        const h = _history[_history.length - 1]\n        const whereami = {\n          index: h.index,\n          path: h.path,\n          data: h.data,\n          pre: h.preState,\n          flag: h.flag\n        }\n        condition = this.emit('preback', whereami)\n        if (!condition) return\n      }\n      if (where) {\n        if (typeof where != 'string') return\n        const target = this.getWhereInfo(where)\n        if (target) {\n          this.$select({\n            select: target.index,\n            selectData: utile.merge({}, data, condition),\n            direction: 'jumpback'\n          })\n        }\n      } else {\n        const whereBack = this.emit('historypop')\n        // whereBack: {\n        // index: props.index,\n        // key: props.key,\n        // data: props.data,\n        // rootUrl: this.state.rootUrl,\n        // preState: curHistoryState,\n        // timeLine: _historyCount,\n        // flag: this.state.flag\n        //}\n        if (whereBack) {\n          this.$select({\n            select: whereBack.index,\n            selectData: utile.merge({}, whereBack.data, condition),\n            direction: 'back'\n          })\n          return whereBack\n        } else {\n          if (window.history.length) {\n            history.back()\n          } else {\n            pushState({ rootUrl: rootUrl }, true)\n          }\n        }\n      }\n    }\n  })\n\n  return router\n})"]}